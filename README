GRAVE
Algorithm for a bookmaker.
    Bets for the same game, for the same type (spread, O/U), will be matched up.
    Those that cannot be matched up, in the case where there is no bet on the
    opposite side with the same value, will remain "open". They will remain
    open because another bettor may want to take the other side of this bet.

    So, if Garry places a bet for 200$ on the under for the Celtics vs. Raptors
    game and there are no open bets on the over side for the Celtics vs. Raptors
    game, then 
        In other words, 

Maybe use readaline, have type of bet before the line/description
        so that we know how much to "malloc". Use split function also?

Overall design:
    Use C to gather arrays, use Hansons stuff (atoms, tables) to organize data
    like organizing bets by game, then by parlay (although probably won't) deal
    with that. 

    What do I use c++ for?
    
    
    Output: total made by the book, bets rejected (full username, etc.), total $ in bets places,

    later implement a GUI?
        **See example before for how GUI would look.

Example:
    file.txt:
-->FORMAT: Game, odds + type + additional information, Bettor's pick, Bettor's bet<--
        Celtics vs. Raptors, -110 spread (-2.5), Celtics, $100
        Celtics vs. Raptors, -110 spread (-2.5), Raptors, $100
        Celtics vs. Raptors, -110 O/U 114.5, Over, -110, $100
        Celtics vs. Raptors, -110 O/U 114.5, Over, -110, $100
        Celtics vs. Raptors, -110 O/U 114.5, Under, -110, $200

    Program has a hash table. Perhaps I make a class for it.


    Priority queue for open bets?

Matching C and C++:
    Compile C programs...
        gcc -c -o somecode.o somecode.c
    Compile C++ programs...
        g++ -c -o othercode.o othercode.cpp
    
